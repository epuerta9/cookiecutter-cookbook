[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kitchenai_{{ cookiecutter.project_name }}"
version = "0.0.1"
authors = [{ name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" }]
description = ''
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "django-ninja",
  "llama-index", 
  "chromadb", 
  "llama-index-vector-stores-chroma", 
  "boto3", 
  "llama-index-llms-openai"

]

[tool.hatch.envs.default.scripts]
docker-build = "docker build -t kitchenai_{{ cookiecutter.project_name }} ."

[project.urls]
Documentation = "https://github.com/{{ cookiecutter.author_name }}/kitchenai_{{ cookiecutter.project_name }}#readme"
Issues = "https://github.com/{{ cookiecutter.author_name }}/kitchenai_{{ cookiecutter.project_name }}/issues"
Source = "https://github.com/{{ cookiecutter.author_name }}/kitchenai_{{ cookiecutter.project_name }}"

[tool.hatch.version]
path = "kitchenai_{{ cookiecutter.project_name }}/__about__.py"

[tool.falco.work]
server = "python manage.py migrate && python manage.py runserver {address}"
worker = "python manage.py qcluster"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:kitchenai_{{ cookiecutter.project_name }} tests}"

[tool.coverage.run]
source_pkgs = ["kitchenai_{{ cookiecutter.project_name }}", "tests"]
branch = true
parallel = true
omit = [
  "kitchenai_{{ cookiecutter.project_name }}/__about__.py",
]

[tool.coverage.paths]
kitchenai_{{ cookiecutter.project_name }} = ["kitchenai_{{ cookiecutter.project_name }}", "*/kitchenai_{{ cookiecutter.project_name }}/kitchenai_{{ cookiecutter.project_name }}"]
tests = ["tests", "*/kitchenai_{{ cookiecutter.project_name }}/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]


[tool.hatch.envs.dev]
dependencies = [
    "django-browser-reload",
    "django-debug-toolbar",
    "dj-notebook>=0.6.1",
    "Werkzeug[watchdog]>=3.0.1",
    "django-stubs[compatible-mypy]",
    "django-fastdev",
    "coverage[toml]>=6.5",
    "pre-commit",
    "pytest",
    "pytest-django",
    "pytest-sugar",
    "pytest-xdist",
    "falco-cli",
    "django-watchfiles",
    "git-cliff",
    "bump-my-version",
    "hatch-pip-compile",
    "kitchenai"
]
lock-filename = "requirements-dev.txt"

[tool.hatch.envs.dev.scripts]
compile = "hatch-pip-compile --output-file requirements-dev.txt"